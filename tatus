[1mdiff --git a/src/Game.java b/src/Game.java[m
[1mindex cb483da..6d9723d 100644[m
[1m--- a/src/Game.java[m
[1m+++ b/src/Game.java[m
[36m@@ -393,7 +393,7 @@[m [mpublic class Game {[m
                 for (Element e : elementList) {[m
                     i++;[m
                     e.update();[m
[31m-                    if(i == elementListSize)[m
[32m+[m[32m                    if(i == elementListSize) // DO NOT CHANGE THIS, VERY IMPORTANT - MAJED.[m
                     {[m
                         break;[m
                     }[m
[1mdiff --git a/src/Player.java b/src/Player.java[m
[1mindex d32701c..f3d558d 100644[m
[1m--- a/src/Player.java[m
[1m+++ b/src/Player.java[m
[36m@@ -73,14 +73,17 @@[m [mpublic abstract class Player {[m
      */[m
     protected void changeOutputPipe(Game game) {[m
         if (!(currentElement instanceof Pump currentPump)) {[m
[31m-            if (!Game.testMode)  System.out.println("You are not currently on a pump. Move to a pump first.");[m
[32m+[m[32m            // if (!Game.testMode)[m
[32m+[m[32m                System.out.println("You are not currently on a pump. Move to a pump first.");[m
             return;[m
         }[m
 [m
[31m-        if (!Game.testMode) System.out.println("Currently connected pipes to the pump '" + currentPump.getName() + "':");[m
[32m+[m[32m       // if (!Game.testMode)[m
[32m+[m[32m        // System.out.println("Currently connected pipes to the pump '" + currentPump.getName() + "':");[m
         List<Pipe> connectablePipes = currentPump.connectablePipes;[m
         for (int i = 0; i < connectablePipes.size(); i++) {[m
[31m-            if (!Game.testMode) System.out.println((i + 1) + ". " + connectablePipes.get(i).getName());[m
[32m+[m[32m            // if (!Game.testMode)[m
[32m+[m[32m                System.out.println((i + 1) + ". " + connectablePipes.get(i).getName());[m
         }[m
 [m
         if (!Game.testMode) System.out.println("Select the number of the pipe to set as the new output pipe:");[m
[36m@@ -88,14 +91,16 @@[m [mpublic abstract class Player {[m
         try {[m
             pipeNumber = Integer.parseInt(Game.scanner.nextLine());[m
             if (pipeNumber < 1 || pipeNumber > connectablePipes.size()) {[m
[31m-                if (!Game.testMode)    System.out.println("Invalid input. Select a number listed above.");[m
[32m+[m[32m                // if (!Game.testMode)[m
[32m+[m[32m                    System.out.println("Invalid input. Select a number listed above.");[m
             } else {[m
                 Pipe selectedPipe = connectablePipes.get(pipeNumber - 1);[m
                 currentPump.outPipe = selectedPipe; // Setting the selected pipe as new output pipe[m
                 System.out.println("New output pipe set to: " + selectedPipe.getName());[m
             }[m
         } catch (InputMismatchException e) {[m
[31m-            if (!Game.testMode)  System.out.println("Invalid input. Please enter a number.");[m
[32m+[m[32m            // if (!Game.testMode)[m
[32m+[m[32m                System.out.println("Invalid input. Please enter a number.");[m
         }[m
     }[m
 [m
[1mdiff --git a/src/Saboteur.java b/src/Saboteur.java[m
[1mindex 99964c1..69857d8 100644[m
[1m--- a/src/Saboteur.java[m
[1m+++ b/src/Saboteur.java[m
[36m@@ -78,7 +78,7 @@[m [mpublic class Saboteur extends Player {[m
                         case 4:[m
                             if (!Game.testMode)[m
                                 System.out.println("You chose: Puncture a pipe");[m
[31m-                            puncture(g.pipeList.get(0));[m
[32m+[m[32m                            puncture((Pipe) currentElement);[m
                             actionstaken++;[m
                             break;[m
                         case 5:[m
[36m@@ -131,7 +131,7 @@[m [mpublic class Saboteur extends Player {[m
     public void puncture(Pipe p1) {[m
         if (Objects.equals(currentElement, p1) && p1.getWorks()) {[m
             p1.setWorks(false);[m
[31m-            System.out.println(playerName + "punctured" + p1.getName());[m
[32m+[m[32m            System.out.println(playerName + "punctured " + p1.getName());[m
             return;[m
         }[m
         if (currentElement == p1 && !p1.getWorks()) {[m
[1mdiff --git a/tests/1/output.txt b/tests/1/output.txt[m
[1mindex e2d847a..9c06dba 100644[m
[1m--- a/tests/1/output.txt[m
[1m+++ b/tests/1/output.txt[m
[36m@@ -20,13 +20,18 @@[m [mPlayer Plumber 2 passed their turn.[m
 Player Saboteur 2 passed their turn.[m
 Player Plumber 1 passed their turn.[m
 Saboteur 1 moved to Pipe2[m
[31m-You have to be standing on a working pipe to puncture it.[m
[32m+[m[32mSaboteur 1punctured Pipe2[m
 Player Plumber 2 passed their turn.[m
 Player Saboteur 2 passed their turn.[m
[32m+[m[32m1. Pipe1[m
[32m+[m[32m2. Pipe5[m
[32m+[m[32m3. Pipe2[m
[32m+[m[32mInvalid input. Select a number listed above.[m
 Player Plumber 1 passed their turn.[m
 Saboteur 1 moved to Pump2[m
 Saboteur 1 moved to Pipe6[m
 Player Plumber 2 passed their turn.[m
 Player Saboteur 2 passed their turn.[m
[32m+[m[32mA new Pump Has been Manufactured at the cistern[m
 Plumber 1 moved to Pipe2[m
 You need to be standing on a punctured pipe to fix it.[m
